# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Iosevka Nerd Font Mono 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# bluetooth
exec --no-startup-id blueman-applet

# notification daemon
exec --no-startup-id dunst

# xorg
exec_always --no-startup-id xset r rate 200 30
exec_always --no-startup-id xinput set-prop "SYNA328B:00 06CB:CD50 Touchpad" "libinput Natural Scrolling Enabled" 1
exec_always --no-startup-id xinput set-prop "SYNA328B:00 06CB:CD50 Touchpad" "libinput Tapping Enabled" 1

# set background
# credit /u/nite4awk
# https://www.reddit.com/r/calvinandhobbes/comments/14571g/so_i_made_some_calvin_hobbes_walls/
exec_always --no-startup-id feh --bg-fill ~/.wallpapers/calvin-hobbes-tiltshift.jpg

# enable auto-updating workspace icon names
exec_always --no-startup-id i3wsr --icons awesome --config $HOME/.config/i3wsr/config.toml

# without a clipboard manager, exiting the app copied from means you can no longer paste
# https://stackoverflow.com/a/3571949
bindsym $mod+m exec --no-startup-id CM_LAUNCHER=rofi clipmenu

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status pkill -RTMIN+1 i3blocks
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id /usr/local/bin/microphone-toggle.sh && $refresh_i3status

# Bind media keys to playerctl
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPrev exec --no-startup-id playerctl previous
bindsym XF86AudioNext exec --no-startup-id playerctl next

# Bind brightness keys to brightnessctl
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%-
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%

# fullscreen screenshot to clipboard
# credit qxxxb
bindsym Print exec --no-startup-id \
    maim | \
    xclip -selection clipboard -t image/png && \
    notify-send -i "applets-screenshooter-symbolic.symbolic" "Screenshot (fullscreen) copied"

# selection screenshot to clipboard
# credit qxxxb
bindsym Shift+Print exec --no-startup-id \
    maim --select --hidecursor | \
    xclip -selection clipboard -t image/png && \
    notify-send -i "applets-screenshooter-symbolic.symbolic" "Screenshot (selection) copied"

# window screenshot to clipboard
# credit qxxxb
bindsym --release $mod+Print exec --no-startup-id \
    w=$(xdotool selectwindow) && \
    maim --window=$w | \
    xclip -selection clipboard -t image/png && \
    notify-send -i "applets-screenshooter-symbolic.symbolic" "Screenshot (window) copied"

# fullscreen screenshot to file (and clipboard)
# credit qxxxb
bindsym Ctrl+Print exec --no-startup-id \
    f=$(zenity --file-selection --save) && \
    maim | \
    tee $f | \
    xclip -selection clipboard -t image/png && \
    notify-send -i "applets-screenshooter-symbolic.symbolic" "Screenshot (fullscreen) saved"

# selection screenshot to file (and clipboard)
# credit qxxxb
bindsym Ctrl+Shift+Print exec --no-startup-id \
    f=$(zenity --file-selection --save) && \
    maim --select --hidecursor | \
    tee $f | \
    xclip -selection clipboard -t image/png && \
    notify-send -i "applets-screenshooter-symbolic.symbolic" "Screenshot (selection) saved"

# window screenshot to file (and clipboard)
# credit qxxxb
bindsym --release Ctrl+$mod+Print exec --no-startup-id \
    f=$(zenity --file-selection --save) && \
    w=$(xdotool selectwindow) && \
    maim --window=$w | \
    tee $f | \
    xclip -selection clipboard -t image/png && \
    notify-send -i "applets-screenshooter-symbolic.symbolic" "Screenshot (window) saved"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a modern program launcher)
bindsym $mod+x exec "rofi -modi drun,run,ssh -show drun -show-icons"

# lock screen
bindsym $mod+semicolon exec --no-startup-id $HOME/.config/i3lock/i3lock-color.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# assign first 5 workspaces to left monitor and next 5 to right monitor
workspace $ws1 output HDMI-1
workspace $ws2 output HDMI-1
workspace $ws3 output HDMI-1
workspace $ws4 output HDMI-1
workspace $ws5 output HDMI-1
workspace $ws6 output eDP-1
workspace $ws7 output eDP-1
workspace $ws8 output eDP-1
workspace $ws9 output eDP-1
workspace $ws10 output eDP-1

# iterate through workspaces sequentially
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# go to first clean workspace
bindsym $mod+c exec --no-startup-id /usr/local/bin/available-workspace.py

workspace_auto_back_and_forth yes

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Multi_key mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# open common applications
set $mode_launcher Launch: [b]rowser [e]ditor [f]ile manager [n]ew display mode [m]onitor [w]eather [c]alendar emoj[i]
mode "$mode_launcher" {
        bindsym b exec firefox
        bindsym --release b mode "default"
        bindsym e exec --no-startup-id i3-sensible-terminal -e i3-sensible-editor
        bindsym --release e mode "default"
        bindsym f exec --no-startup-id i3-sensible-terminal -e ranger
        bindsym --release f mode "default"
        bindsym n exec --no-startup-id /usr/local/bin/new-display-mode.sh
        bindsym --release n mode "default"
        bindsym m exec --no-startup-id /usr/local/bin/monitor-layout.sh
        bindsym --release m mode "default"
        bindsym w exec --no-startup-id i3-sensible-terminal -e /usr/local/bin/weather.sh
        bindsym --release w mode "default"
        bindsym c exec --no-startup-id i3-sensible-terminal -e /usr/local/bin/calendar.sh
        bindsym --release c mode "default"
        bindsym i exec --no-startup-id /usr/bin/rofimoji
        bindsym --release i mode "default"

        # back to normal
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+p mode "default"
}

bindsym $mod+p mode "$mode_launcher"

# control power level
set $mode_power Power: [l]ogout [s]uspend [h]ibernate [p]oweroff [r]eboot
mode "$mode_power" {
        bindsym l exec i3-msg exit
        bindsym s mode "default"; exec systemctl suspend
        bindsym h mode "default"; exec systemctl hibernate
        bindsym p exec systemctl poweroff
        bindsym r exec systemctl reboot

        # back to normal
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+slash mode "default"
}

bindsym $mod+slash mode "$mode_power"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        tray_output eDP-1
        status_command SCRIPT_DIR=/usr/lib/i3blocks i3blocks
}

default_border pixel 4
smart_borders on
gaps inner 8
gaps outer -8

# Set window border colors
set $fg         #f0f0f0
set $bg         #0f0f0f
set $in         #9ef1cd
set $urg        #f00000
set $foc        #eeb037
set $unf        #234218

# class                 border  backgr. text indicator child_border
client.focused          $foc    $bg     $fg  $in       $foc
client.focused_inactive $unf    $bg     $fg  $in       $unf
client.unfocused        $unf    $bg     $fg  $in       $unf
client.urgent           $urg    $bg     $fg  $in       $urg
client.placeholder      $bg     $bg     $fg  $in       $bg

client.background       $bg

exec --no-startup-id /usr/local/bin/new-display-mode.sh
exec --no-startup-id /usr/local/bin/monitor-layout.sh

# autostart windows
assign [class="^KeePassXC$"] workspace number 2
# https://github.com/i3/i3/issues/2060
# https://github.com/i3/i3/issues/4155
for_window [class="^Spotify$"] move --no-auto-back-and-forth to workspace number 9
assign [class="^discord$"] workspace number 1
assign [class="^Slack$"] workspace number 1
assign [class="^thunderbird$"] workspace number 10

exec keepassxc
exec --no-startup-id spotify
exec --no-startup-id slack
exec --no-startup-id discord
exec thunderbird

exec --no-startup-id i3-msg 'workspace number 5'
exec --no-startup-id i3-msg 'workspace number 6'
